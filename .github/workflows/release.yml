name: Test and deploy app

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

env:
  CACHE_VERSION: ${{ secrets.CACHE_VERSION }}
  BUILD_VERSION: app-${{ github.run_id }}-${{ github.run_number }}
  NODE_MODULES_CACHE_PREFIX: node-${{ secrets.CACHE_VERSION }}

jobs:
  deps:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore node modules cache
        uses: actions/cache/restore@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_PREFIX }}-${{ hashFiles('package-lock.json') }}

      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Install dependencies
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Save node modules cache
        uses: actions/cache/save@v4
        if: ${{ steps.cache-node-modules.outputs.cache-hit != 'true' }}
        with:
          path: node_modules
          key: ${{ steps.cache-node-modules.outputs.cache-primary-key }}

  lint-typeCheck:
    name: Code linting and type checking
    runs-on: ubuntu-latest
    needs: [deps]
    strategy:
      matrix:
        command:
          - npm run lint
          - npm run stylelint
          - npm run prettier:ci
          - npm run typeCheck
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore node modules cache
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_PREFIX }}-${{ hashFiles('package-lock.json') }}

      - name: Setup Volta
        uses: volta-cli/action@v4

      - run: ${{ matrix.command }}

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [deps]
    strategy:
      matrix:
        shardIndex: [1, 2, 3]
        shardTotal: [3]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore node modules cache
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_PREFIX }}-${{ hashFiles('package-lock.json') }}

      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Tests for shard ${{ matrix.shardIndex }} of ${{ matrix.shardTotal }}
        run: npm run test:ci -- --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

  build:
    name: Build app
    runs-on: ubuntu-latest
    needs: [deps]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore node modules cache
        uses: actions/cache/restore@v4
        with:
          path: node_modules
          key: ${{ env.NODE_MODULES_CACHE_PREFIX }}-${{ hashFiles('package-lock.json') }}

      - name: Setup Volta
        uses: volta-cli/action@v4

      - name: Create build
        run: npm run build

      - name: Save build
        uses: actions/cache/save@v4
        with:
          path: dist
          key: ${{ env.BUILD_VERSION }}

  deploy:
    name: Deploy app to Github pages
    runs-on: ubuntu-latest
    needs: [deps, lint-typeCheck, test, build]
    if: ${{ github.ref == 'refs/head/main' }}
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Restore build
        uses: actions/cache/restore/@v4
        with:
          path: dist
          key: ${{ env.BUILD_VERSION }}

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
